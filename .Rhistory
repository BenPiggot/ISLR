Washington2012 <- WA2012[which(WA2012$BPL == 053),]
Washington1990 <-  WA1990[which(WA1990$BPL == 053),]
hist(Michigan2012$AGE)
hist(Minnesota2012$AGE)
hist(California2012$AGE)
hist(Mexican2012$AGE)
hist(Canada2012$AGE)
hist(Califonria2012$AGE)
hist(Califonria2012$AGE)
hist(California2012$AGE)
hist(Wisconsin2012$AGE)
hist(Washington2012$AGE)
Africa2012 <- WA2012[which(WA2012$BPL == 600),]
hist(Africa2012$AGE)
SeattleData <- WA2012[which(WA2012$METAREA==760),]
SeattleData <- WA2012[which(WA2012$METAREAD==7600),]
SeattleData <- WA2012[which(WA2012$MET2013==42660),]
SeattleData2012 <- WA2012[which(WA2012$MET2013==42660),]
MexicanSeattle2012 <- SeattleData2012[which(SeattleData2012$BPL==200),]
AfricanSeattle2012 <- SeattleData2012[which(SeattleData2012$BPL==600),]
hist(AfricanSeattle2012$AGE)
hist(AfricanSeattle2012$AGE, xlab="Age")
hist(AfricanSeattle2012$AGE, xlab="Age", main="Africans in Metropolitan Seattle")
myurl <- "http://www.aragorn.org/data/sports/NFL/seasons/metadata_since_1980/uncleaned_nfl_game_metadata_since_1980.csv"
download.file(url=myurl, destfile="nfl-metadata.csv", method="curl")
NFLmetadata <- read.csv("nfl-metadata.csv")
str(NFLmetadata)
NFLmetadata <- read.csv("nfl-metadata.csv", sep=",", header=TRUE)
rm(NFLmetadata)
install.packages("SportsAnalytics")
data(BundesligaFinalStandings)
library(SportsAnalytics)
data(BundesligaFinalStandings)
summary(BundeligaFinalStandings)
summary(BundesligaFinalStandings)
qplot(BundesligaFinalStandings$Position, BundesligaFinalStandings$Wins)
qplot(BundesligaFinalStandings$Position, BundesligaFinalStandings$GoalsScored)
qplot(BundesligaFinalStandings$Position, BundesligaFinalStandings$GoalsScored, color=BundesligaFinalStandings$Team)
data(BundesligaTransferSums)
str(BundesligaTransferSums)
qplot(BundesligaTransferSums$Season, BundesligaTransferSums$Spendings)
qplot(BundesligaTransferSums$Season, BundesligaTransferSums$Spendings, color=BundesligaTransferSums$Team)
qplot(BundesligaTransferSums$Season, BundesligaTransferSums$Spendings,
color=BundesligaTransferSums$Team, xlab="Season", ylab="Transfer Spending")
ggpot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() +
scale_colour_manual(values=Palette1)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() +
scale_colour_manual(values=Palette1)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() +
scale_colour_manual()
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point())
geom_point()
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point()
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_colour_manual(value=cols)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_colour_manual(values=cols)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point()
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma)
library(scales)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma)
?merge
merge(BundesligaFinalStandings, BundesligaTransferSums, by.x=BundesligaFinalStandings$Team)
summary(BundesligaFinalStandings)
merge(BundesligaFinalStandings, BundesligaTransferSums, by.x=BundesligaFinalStandings$Season)
merge(BundesligaFinalStandings, BundesligaTransferSums, by=BundesligaFinalStandings$Season)
summary(BundesligaTransferSums)
geom_point() + scale_y_continuous(labels = comma) + scale_colour_brewer(palette="Set1")
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma) + scale_colour_brewer(palette="Set1")
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma) + scale_colour_brewer(palette="Set2")
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma) + scale_colour_brewer(palette="Set10")
colorCount = length(unique(mtcars$hp))
colorCount = length(unique(BundeligaTransferSums$Team))
colorCount = length(unique(BundesligaTransferSums$Team))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
library(colorRamps)
library(RColorBrewer)
install.packages("colorRamps")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
library(colorRamps)
library(RColorBrewer)
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma) +
scale_fill_manual(values = getPalette(colorCount)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma) +
scale_fill_manual(values = getPalette(colorCount))
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma) +
scale_fill_manual(values = getPalette(colorCount))
colorCount = length(unique(BundesligaTransferSums$Team))
getPalette = colorRampPalette(brewer.pal(20, "Set1"))
colorCount = length(unique(BundesligaTransferSums$Team))
getPalette = colorRampPalette(brewer.pal(12, "Accent"))
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma) +
scale_fill_manual(values = getPalette(colorCount))
getPalette = colorRampPalette(brewer.pal(12, "Paired"))
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma) +
scale_fill_manual(values = getPalette(colorCount))
colorCount = length(unique(BundesligaTransferSums$Team))
getPalette = colorRampPalette(brewer.pal(12, "Paired"))
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma) +
scale_fill_manual(values = getPalette(colorCount))
scale_fill_manual(values = Paired))
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma) +
scale_fill_manual(values = Paired)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma) +
scale_fill_manual(values = "Paired")
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma) +
scale_colour_manual(values = "Paired")
scale_colour_manual(values = "Set1")
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma) +
scale_colour_manual(values = "Set1")
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma)
cols <- colorRampPalette(brewer.pal(12, "Set3"))
myPal <- cols(length(unique(BundesligaTransferSums$Team)))
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma) +
scale_fill_manual(values = myPal)
cols <- colorRampPalette(brewer.pal(12, "Set8"))
myPal <- cols(length(unique(BundesligaTransferSums$Team)))
cols <- colorRampPalette(brewer.pal(12, "Set5"))
myPal <- cols(length(unique(BundesligaTransferSums$Team)))
cols <- colorRampPalette(brewer.pal(12, "Set5"))
myPal <- cols(length(unique(BundesligaTransferSums$Team)))
cols <- colorRampPalette(brewer.pal(12, "Set1"))
myPal <- cols(length(unique(BundesligaTransferSums$Team)))
cols <- colorRampPalette(brewer.pal(9, "Set1"))
myPal <- cols(length(unique(BundesligaTransferSums$Team)))
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma) +
scale_fill_manual(values = myPal)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma) +
scale_fill_manual(values = "Set8")
cols <- colorRampPalette(brewer.pal(9, "Set8"))
myPal <- cols(length(unique(BundesligaTransferSums$Team)))
cols <- colorRampPalette(brewer.pal(9, "Set2"))
cols <- colorRampPalette(brewer.pal(8, "Set2"))
myPal <- cols(length(unique(BundesligaTransferSums$Team)))
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point() + scale_y_continuous(labels = comma) +
scale_fill_manual(values = myPal)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
geom_point(scale_fill_manual(values = myPal)) + scale_y_continuous(labels = comma)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) +
scale_fill_manual(values = myPal) + scale_y_continuous(labels = comma)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) + geom_point()
scale_fill_manual(values = myPal) + scale_y_continuous(labels = comma)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) + geom_point() +
scale_fill_manual(values = myPal) + scale_y_continuous(labels = comma)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) + geom_point() +
scale_colour_brewer("clarity") + scale_y_continuous(labels = comma)
scale_colour_brewer(myPal) + scale_y_continuous(labels = comma)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) + geom_point() +
scale_colour_brewer(myPal) + scale_y_continuous(labels = comma)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) + geom_point() +
scale_colour_brewer(type="seq") + scale_y_continuous(labels = comma)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) + geom_point() +
scale_colour_brewer("Set1") + scale_y_continuous(labels = comma)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) + geom_point() +
scale_colour_brewer() + scale_y_continuous(labels = comma)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) + geom_point() +
scale_y_continuous(labels = comma)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) + geom_point() +
scale_y_continuous(labels = comma) + scale_colour_brewer("Set1")
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) + geom_point() +
scale_y_continuous(labels = comma) + scale_colour_brewer(palette="Set1")
cols <- colorRampPalette(brewer.pal(8, "Set2"))
myPal <- cols(length(unique(BundesligaTransferSums$Team)))
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) + geom_point() +
scale_y_continuous(labels = comma) + scale_colour_brewer(palette=myPal)
cols <- colorRampPalette(brewer.pal(9, "Set1"))
myPal <- cols(length(unique(BundesligaTransferSums$Team)))
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) + geom_point() +
scale_y_continuous(labels = comma) + scale_colour_brewer(palette=myPal)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) + geom_point() +
scale_y_continuous(labels = comma) + scale_colour_brewer()
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) + geom_point() +
scale_y_continuous(labels = comma)
qplot(AGE, main=AfricanSeattle2012, xlab="Age",
main="Africans in Metropolitan Seattle", geom="histogram")
qplot(AGE, main=AfricanSeattle2012, xlab="Age",
main="Africans in Metropolitan Seattle", geom="histogram")
qplot(AGE, data=AfricanSeattle2012, xlab="Age",
main="Africans in Metropolitan Seattle", geom="histogram")
qplot(AGE, data=AfricanSeattle2012, xlab="Age", stat_bin=20,
main="Africans in Metropolitan Seattle", geom="histogram")
qplot(AGE, data=AfricanSeattle2012, xlab="Age", binwidth=20
main="Africans in Metropolitan Seattle", geom="histogram")
qplot(AGE, data=AfricanSeattle2012, xlab="Age", binwidth=20,
main="Africans in Metropolitan Seattle", geom="histogram")
qplot(AGE, data=AfricanSeattle2012, xlab="Age", binwidth=10,
main="Africans in Metropolitan Seattle", geom="histogram")
qplot(AGE, data=AfricanSeattle2012, xlab="Age", binwidth=5,
main="Africans in Metropolitan Seattle", geom="histogram")
qplot(AGE, data=AfricanSeattle2012, xlab="Age", binwidth=5,
main="People Born in Africa in Metropolitan Seattle", geom="histogram")
qplot(AGE, data=AfricanSeattle2012, xlab="Age", binwidth=5,
main="People Born in Africa\n in Metropolitan Seattle", geom="histogram")
qplot(AGE, data=AfricanSeattle2012, xlab="Age", binwidth=5,
main="People Born in Africa\n in Metropolitan Seattle, by Age", geom="histogram")
qplot(AGE, data=AfricanSeattle2012, xlab="Age", binwidth=5,
main="People in Metropolitan Seattle\n Born in Africa (by Age)", geom="histogram")
qplot(AGE, data=AfricanSeattle2012, xlab="Age", binwidth=5,
main="People in Metropolitan Seattle\n Born in Africa (2012)", geom="histogram")
read.csv("Arizona Data.csv")
ArizData <- read.csv("Arizona Data.csv")
str(ArizData)
table(SeattleData2012,BPL)
table(SeattleData2012,SeattleData$BPL)
table(SeattleData2012$MET2013,SeattleData$BPL)
prop.table(SeattleData2012$MET2013,SeattleData$BPL)
prop.table(SeattleData2012,SeattleData$BPL)
table(SeattleData2012,SeattleData$BPL)
table(SeattleData2012$MET2013,SeattleData$BPL)
str(WAData)
str(WAdata)
str(WAdata$EDUCD)
head(Washington2012$MIGPLAC5, 100)
head(Washington2012$MIGRATE5, 100)
head(Washington2010$MIGRATE5, 100)
head(WA2010$MIGRATE5, 100)
head(WA2010$MIGPLAC5, 100)
head(WA2010$EDUCD, 100)
head(WA2010$EDUC, 100)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) + geom_point() +
scale_y_continuous(labels = comma)
WAdata$Mexican <- ifelse(WAdata$BPL == 200, c("Mexican"), c("Not Mexican"))
WA2010 <- WAdata[which(WAdata$YEAR==2010),]
WA2000 <- WAdata[which(WAdata$YEAR==2000),]
WA2012 <- WAdata[which(WAdata$YEAR==2012),]
WA1990 <- WAdata[which(WAdata$YEAR==1990),]
ggplot(WA2012, aes(EDUC, INCTOT, colour=factor(Mexican))) + geom_point() +
scale_y_continuous(labels = comma)
ggplot(WA2012, aes(EDUC, INCTOT, colour=factor(RACE))) + geom_point() +
ggplot(WA2012, aes(EDUC, INCTOT, colour=factor(RACE))) + geom_point() +
scale_y_continuous(labels = comma)
ggplot(WA2012, aes(EDUC, INCTOT, colour=factor(as.factor(RACE))) + geom_point() +
scale_y_continuous(labels = comma)
ggplot(WA2012, aes(EDUC, INCTOT, colour=factor(as.factor(RACE)))) + geom_point() +
scale_y_continuous(labels = comma)
ggplot(WA2012, aes(EDUC, INCTOT, colour=factor(as.factor(RACE)))) + geom_point() +
scale_y_continuous(labels = comma)
ggplot(WA2012, aes(EDUC, colour=factor(as.factor(RACE)))) + geom_point() +
scale_y_continuous(labels = comma)
require(devtools)
install_github('ramnathv/rCharts@dev')
install_github('ramnathv/rMaps')
install.packages("devtools")
require(devtools)
install.packages("devtools")
install.packages("devtools", type="source")
install.packages(devtools, type="source")
read.table("usa_00014.dat")
read.table("usa_00014.dat")
myurl <- "https://usa.ipums.org/usa-action/downloads/extract_files/usa_00014.sps"
download.file(url=myurl, destfile="idaho.sps", method="curl")
TrainingSet <- read.spss("idaho.sps")
library(foreign)
TrainingSet <- read.spss("idaho.sps")
myurl <- "https://usa.ipums.org/usa-action/downloads/extract_files/usa_00014.sps"
download.file(url=myurl, destfile="idaho.spss", method="curl")
TrainingSet <- read.spss("idaho.spss")
myurl <- "https://usa.ipums.org/usa-action/downloads/extract_files/usa_00014.sps"
download.file(url=myurl, destfile="idaho.sav", method="curl")
TrainingSet <- read.spss("idaho.sav")
IdahoData <- read.csv("usa_00015.csv")
RacialChange <- ddply(WAdata, ~YEAR, summarize, sum(RACE))
RacialChange
RacialChange <- ddply(WAdata, ~YEAR, summarize, sum(RACE==4 | 5 | 6))
RacialChange
RacialChange <- ddply(WAdata, ~YEAR, summarize, sum(RACE==4))
RacialChange
RacialChange <- ddply(WAdata, ~YEAR, summarize, sum(RACE==4 & 5))
RacialChange
RacialChange <- ddply(WAdata, ~YEAR, summarize, sum(RACE==6))
RacialChange
plot(RacialChange)
qplot(RacialChange)
plot(RacialChange)
RacialChange <- ddply(WAdata, ~YEAR, summarize, sum(RACE==4))
plot(RacialChange)
WAdata <- read.csv("usa_00016.csv")
WAdata$Mexican <- ifelse(WAdata$BPL == 200, c("Mexican"), c("Not Mexican"))
str(WAdata)
ArizData <- read.csv("usa_00017.csv")
str(ArizData)
WAdata <- read.csv("usa_00016.csv")
WAdata$Mexican <- ifelse(WAdata$BPL == 200, c("Mexican"), c("Not Mexican"))
str(WAdata)
SeattleData <- WAdata[which(WAdata$METAREA==760),]
WA2010 <- WAdata[which(WAdata$YEAR==2010),]
WA2000 <- WAdata[which(WAdata$YEAR==2000),]
WA2012 <- WAdata[which(WAdata$YEAR==2012),]
WA1990 <- WAdata[which(WAdata$YEAR==1990),]
SeattleData2012 <- WA2012[which(WA2012$MET2013==42660),]
MexicanSeattle2012 <- SeattleData2012[which(SeattleData2012$BPL==200),]
AfricanSeattle2012 <- SeattleData2012[which(SeattleData2012$BPL==600),]
qplot(AGE, data=AfricanSeattle2012, xlab="Age", binwidth=5,
main="People in Metropolitan Seattle\n Born in Africa (2012)", geom="histogram")
Mexican2012 <- WA2012[which(WA2012$BPL == 200),]
Michigan2012 <- WA2012[which(WA2012$BPL == 026),]
Minnesota2012 <- WA2012[which(WA2012$BPL == 027),]
Wisconsin2012 <- WA2012[which(WA2012$BPL == 055),]
California2012 <- WA2012[which(WA2012$BPL == 006),]
Canada2012 <- WA2012[which(WA2012$BPL == 150),]
Washington2012 <- WA2012[which(WA2012$BPL == 053),]
Africa2012 <- WA2012[which(WA2012$BPL == 600),]
Washington1990 <-  WA1990[which(WA1990$BPL == 053),]
RacialChange <- ddply(WAdata, ~YEAR, summarize, sum(RACE==4))
plot(RacialChange)
plot(RacialChange, ylab="Chinese Population in WA State")
RacialChange
RacialChange <- RacialChange[-c(4,5,6),]
RacialChange
plot(RacialChange, ylab="Chinese Population in WA State")
RacialChange <- RacialChange[-c(4,5,6,7),]
plot(RacialChange, ylab="Chinese Population in WA State")
RacialChange2 <- ddply(WAdata, ~YEAR, summarize, sum(RACE==6))
RacialChange2 <- RacialChange2[-c(4,5,6,7),]
par(mfrow=c(2,1))
plot(RacialChange, ylab="Asian Population in WA State")
plot(RacialChange, ylab="Chinese Population in WA State")
RacialChange2
RacialChange
RacialChange2 <- ddply(WAdata, ~YEAR, summarize, sum(RACE==6))
plot(RacialChange2, ylab="Asian Population in WA State")
RacialChange2 <- RacialChange2[-c(4,5,6,7),]
par(mfrow=c(2,1))
par(mfrow=c(1,1))
plot(RacialChange2, ylab="Asian Population in WA State")
RacialChange
qplot(RacialChange[,2], RacialChange[,1])
qplot(RacialChange[,2], RacialChange[,1], xlab="Year", ylab="Asian Population in WA State")
ggplot(RacialChange, aes(x=RacialChange[,1], y=RacialChange[,2]) + geom_line()
ggplot(RacialChange, aes(x=RacialChange[,1], y=RacialChange[,2])) + geom_line()
ggplot(RacialChange, aes(x=RacialChange[,1], y=RacialChange[,2])) + geom_line()
gplot(RacialChange, aes(x=RacialChange[,1], y=RacialChange[,2]),
xlab="Year", ylab="Asian Population in WA State") + geom_line()
ggplot(RacialChange, aes(x=RacialChange[,1], y=RacialChange[,2]),
xlab="Year", ylab="Asian Population in WA State") + geom_line()
ggplot(RacialChange, aes(x=RacialChange[,1], y=RacialChange[,2])) +
xlab("Year"), ylab("Asian Population in WA State") + geom_line()
ggplot(RacialChange, aes(x=RacialChange[,1], y=RacialChange[,2])) +
xlab("Year") + ylab("Asian Population in WA State") + geom_line()
ggplot(RacialChange2, aes(x=RacialChange2[,1], y=RacialChange2[,2])) +
xlab("Year") + ylab("Asian Population in WA State") + geom_line()
do.call(sum, list(c(1,2,4,1,2), na.rm = TRUE))
do.call(smean, list(c(1,2,4,1,2), na.rm = TRUE))
do.call(mean, list(c(1,2,4,1,2), na.rm = TRUE))
lapply(c(1,2,4,1,2), function(x) x + 1)
ggplot(BundesligaTransferSums, aes(Season, Spendings, colour=factor(Team))) + geom_point() +
scale_y_continuous(labels = comma)
ggplot(RacialChange2, aes(x=RacialChange2[,1], y=RacialChange2[,2])) +
xlab("Year") + ylab("Asian Population in WA State") + geom_line()
str(WAdata)
library(devtools)
install.packages("devtools")
suppressPackageStartupMessages(library(googleVis))
install.packages("googleVis")
suppressPackageStartupMessages(library(googleVis))
library(rCharts)
install.packages("rCharts")
install.packages('devtools')
View(SeattleData2012)
install.packages('devtools')
install.packages(“devtools”)
install.packages("devtools")
library(gsubfn)
library(ISLR)
library(lubridate)
library(ggplot2)
library(scales)
library(plyr)
library(data.table)
library(dplyr)
library(reshape2)
suppressPackageStartupMessages(library(googleVis))
library(devtools)
library(base64enc)￼￼￼
library(shinyapps)
library(rCharts)
library(rMaps)
library(rjson)
library(BH)
library(maptools)
library(gpclib)
gpclibPermit()
library(mapproj)
library(rgdal)
library(OpenStreetMap)
library("UScensus2010")
library(knitr)
library(shiny)
library(SportsAnalytics)
con <- file("en_US.twitter.txt", "r")
setwd("~/Desktop/ISLR")
timesTwo(4)
int timesTwo(int x) {
return x * 2;
}
setwd("~/Desktop/Capstone_Project")
con <- file("en_US.twitter.txt", "r")
twitter <- readLines(con)
twitter <- sample(twitter, 10000, replace=FALSE)
TrigramTokenizer <- function(x) NGramTokenizer(x,
Weka_control(min = 1, max = 1))
twitter <- PCorpus(VectorSource(twitter),
readerControl = list(reader=readPlain),
dbControl = list(dbName="TwitterCorpus"))
library(RWeka)
library(filehash)
library(tm)
twitter <- PCorpus(VectorSource(twitter),
readerControl = list(reader=readPlain),
dbControl = list(dbName="TwitterCorpus"))
twitter.clean <- as.data.frame(inspect(twitter))
yy <- findFreqTerms(twitter, lowfreq=2)
twitter.clean <- data.frame(inspect(twitter))
yy <- findFreqTerms(twitter, lowfreq=100)
twitter <- tm_map(twitter, PlainTextDocument)
twitter <- PCorpus(VectorSource(twitter),
readerControl = list(reader=readPlain),
dbControl = list(dbName="TwitterCorpus"))
yy <- findFreqTerms(twitter, lowfreq=100)
dim(twitter)
con <- file("en_US.twitter.txt", "r")
twitter <- readLines(con)
twitter <- sample(twitter, 10000, replace=FALSE)
twitter <- PCorpus(VectorSource(twitter),
readerControl = list(reader=readPlain),
dbControl = list(dbName="TwitterCorpus"))
TrigramTokenizer <- function(x) NGramTokenizer(x,
Weka_control(min = 1, max = 1))
options(mc.cores=1)
tdm <- TermDocumentMatrix(twitter, control = list(tokenize = TrigramTokenizer))
dim(twitter)
(inspect(twitter[100:110,100:110]))
inspect(twitter[100:110,100:110])
twitter <- TermDocumentMatrix(twitter, control = list(tokenize = TrigramTokenizer))
dim(twitter)
yy <- findFreqTerms(twitter, lowfreq=100)
yy
install.packages("wordcloud")
library(wordcloud)
wordcloud(yy)
m <- as.matrix(twitter)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
d
wordcloud(d)
wordcloud(twitter)
str(yy)
yy <- findFreqTerms(twitter, lowfreq=5)
str(yy)
wordcloud(yy)
con <- file("en_US.twitter.txt", "r")
regex <- readLines(con, 100)
wordcloud(regex)
setwd("~/Desktop/Orange County Book")
con <- file("Introduction copy.txt", "r")
OCwords <- readLines(con)
warnings()
wordcloud(OCwords)
con <- file("Introduction.docx", "r")
OCwords <- readLines(con)
wordcloud(OCwords)
setwd("~/Desktop/Capstone_Project")
twitter <- sample(twitter, 10000, replace=FALSE)
con <- file("en_US.twitter.txt", "r")
x <- readLines(con)
wordcloud(x)
twitter <- sample(twitter, 10000, replace=FALSE)
twitter <- readLines(con)
twitter <- sample(twitter, 10000, replace=FALSE)
str(twitter)
con <- file("en_US.twitter.txt", "r")
twitter <- readLines(con)
twitter <- sample(twitter, 10000, replace=FALSE)
wordcloud(twitter)
wordcloud(twitter, min.freq=10)
twitter.small <- sample(twitter, 1000, replace=FALSE)
wordcloud(twitter.small, min.freq=5, max.words=500)
setwd("~/Desktop/ISLR")
library(ISLR)
data(Smarket)
data(Smarket)
names(Smarket)
pairs(Smarket)
pairs(Smarket, col=Smarket$Direction)
